package com.sport.service.bot.commands.admin;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.extensions.bots.commandbot.commands.IBotCommand;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.bots.AbsSender;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import java.util.ArrayList;
import java.util.List;

@Service
@RequiredArgsConstructor
@Slf4j
public class StartAdminCommand implements IBotCommand {

    @Override
    public String getCommandIdentifier() {
        return "start";
    }

    @Override
    public String getDescription() {
        return "Launch bot and save user's data to database";
    }

    @Override
    public void processMessage(AbsSender absSender, Message message, String[] arguments) {
        User user = message.getFrom();
        log.info("Call command start by user: {}", user.getUserName());
        SendMessage answer = new SendMessage();
        answer.setChatId(message.getChatId());
        answer.setText("""
               üëã\s
               –¢—ã –∑–¥–µ—Å—å –æ–¥–∏–Ω –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.
               –¢—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å/—É–¥–∞–ª–∏—Ç—å —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –º–µ—Å—Ç–∞ –∏ —Å–æ–±—ã—Ç–∏—è.
               –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —é–∑–µ—Ä.
               –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
               /get_place - –≤—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ (–ø–æ –¥–µ—Ñ–æ–ª—Ç—É —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —Å–µ–π—á–∞—Å –æ–¥–Ω–æ –º–µ—Å—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –≤ –ë–î: —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π-—Ñ—É—Ç–±–æ–ª—å–Ω–æ–µ –ø–æ–ª–µ-–ø–æ–º–µ—â–µ–Ω–∏–µ)
               /get_upcoming_events - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
               /get_notifications - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥—Ä—è–¥—É—â–∏—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö)
               /stop_notifications - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≥—Ä—è–¥—É—â–∏—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö)
               /create_place - —Å–æ–∑–¥–∞—Ç—å –º–µ—Å—Ç–æ
               /delete_place - —É–¥–∞–ª–∏—Ç—å –º–µ—Å—Ç–æ
               /create_event - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
               /delete_event - –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ
               \s""");

        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(false);

        List<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow row1 = new KeyboardRow();
        row1.add("/get_place");
        row1.add("/get_upcoming_events");

        keyboard.add(row1);

        KeyboardRow row2 = new KeyboardRow();
        row2.add("/get_notifications");
        row2.add("/stop_notifications");
        keyboard.add(row2);

        KeyboardRow row3 = new KeyboardRow();
        row3.add("/create_place");
        row3.add("/delete_place");
        keyboard.add(row3);

        KeyboardRow row4 = new KeyboardRow();
        row4.add("/create_event");
        row4.add("/delete_event");
        keyboard.add(row4);

        keyboardMarkup.setKeyboard(keyboard);
        answer.setReplyMarkup(keyboardMarkup);

        try {
            absSender.execute(answer);
        } catch (TelegramApiException e) {
            log.error("Error occurred in /start command", e);
        }
    }
}